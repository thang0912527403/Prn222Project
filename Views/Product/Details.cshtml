@using Prn222Project.Models;
@model Product;
<div class="container mx-auto px-4 py-8">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        <!-- Product Images -->
        <div class="space-y-4">
            <div class="bg-white rounded-2xl p-6 shadow-xl">
                <img src="@(string.IsNullOrEmpty(@Model.ImageUrl) ? "./images/no-image.jpg" : @Model.ImageUrl)"
                     alt="Product Image"
                     class="w-full h-96 object-cover rounded-lg">
            </div>
        </div>

        <!-- Product Info -->
        <div class="space-y-6">
            <div>
                <h1 class="text-3xl font-bold text-white mb-2 flex justify-center">@Model.Name</h1>
                <div class="flex items-center space-x-4 mb-4">
                    <div class="flex items-center">
                        <div class="flex text-yellow-400">
                            <svg class="w-5 h-5 fill-current" viewBox="0 0 20 20">
                                <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z" />
                            </svg>
                            <svg class="w-5 h-5 fill-current" viewBox="0 0 20 20">
                                <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z" />
                            </svg>
                            <svg class="w-5 h-5 fill-current" viewBox="0 0 20 20">
                                <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z" />
                            </svg>
                            <svg class="w-5 h-5 fill-current" viewBox="0 0 20 20">
                                <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z" />
                            </svg>
                            <svg class="w-5 h-5 text-gray-400 fill-current" viewBox="0 0 20 20">
                                <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z" />
                            </svg>
                        </div>
                        <span class="text-gray-300 ml-2">(24 đánh giá)</span>
                    </div>
                    <span class="text-green-400 bg-green-400/20 px-3 py-1 rounded-full text-sm">Còn hàng</span>
                </div>
            </div>

            <div class="bg-gray-700/50 rounded-xl p-6">
                <div class="bg-gray-700/30 rounded-xl p-6">
                    <div>
                        <label class="block text-white text-sm font-medium mb-2">Màu sắc:</label>
                        <div class="flex flex-col space-y-2">
                            @for (int i = 0; i < Model.ProductVariants.Count; i++)
                            {
                                var variant = Model.ProductVariants.ElementAt(i);
                                <div>
                                    <button type="button"
                                            onclick="selectVariant(@i)"
                                            id="variant-btn-@i"
                                            class="variant-button cursor-pointer px-4 py-2 bg-white text-gray-700 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                            data-price="@variant.Price.ToString("N0")"
                                            data-variant-id="@variant.Id">
                                        @variant.Color
                                    </button>

                                    <div id="variant-info-@i" class="variant-info mt-2 p-4 bg-gray-800 text-white rounded-lg hidden">
                                        <p><strong>Decoration:</strong> @variant.Decoration</p>
                                        <p><strong>Tồn kho:</strong> @variant.NumberInStock</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="flex items-center space-x-4 mb-4">
                    <span id="mainPrice" class="text-3xl font-bold text-green-400">@Model.Price</span>
                    @* <span class="text-lg text-gray-400 line-through">250.000 ₫</span>
                    <span class="bg-red-500 text-white px-2 py-1 rounded text-sm">-24%</span> *@
                </div>
                <div class="space-y-4">
                    <div>
                        <label class="block text-white text-sm font-medium mb-2">Số lượng:</label>
                        <div class="flex items-center space-x-3">
                            <button type="button" onclick="decreaseQty()" class="w-10 cursor-pointer h-10 bg-white text-gray-700 rounded-lg hover:bg-gray-100 flex items-center justify-center font-bold">-</button>

                            <input id="quantityInput" type="number" value="1" min="1"
                                   class="w-20 px-3 py-2 bg-white text-center rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">

                            <button type="button" onclick="increaseQty()" class="w-10 cursor-pointer h-10 bg-white text-gray-700 rounded-lg hover:bg-gray-100 flex items-center justify-center font-bold">+</button>
                        </div>
                    </div>

                    <div class="flex space-x-4 pt-4">
                        <button onclick="handleAddToCart()"
                                class="flex-1 cursor-pointer bg-green-500 text-white py-3 rounded-xl font-semibold hover:bg-green-600 transition-colors focus:outline-none focus:ring-2 focus:ring-green-400">
                            Thêm vào giỏ hàng
                        </button>
                    </div>

                    <button class="w-full cursor-pointer border border-gray-500 text-white py-2 rounded-xl hover:bg-gray-700 transition-colors flex items-center justify-center space-x-2">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                        </svg>
                        <span>Yêu thích</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Description & Reviews -->
    <div class="mt-16">
        <div class="bg-gray-700/30 rounded-2xl overflow-hidden">
            <div class="flex border-b border-gray-600">
                <button class="px-6 py-4 text-white cursor-pointer bg-blue-500/20 border-b-2 border-blue-500">Mô tả sản phẩm</button>
                <button class="px-6 py-4 text-gray-300 cursor-pointer hover:text-white">Đánh giá (24)</button>
                <button class="px-6 py-4 text-gray-300 cursor-pointer hover:text-white">Chính sách đổi trả</button>
            </div>
            <div class="p-8">
                <div class="text-gray-300 leading-relaxed space-y-4">
                    <p>@Model.Description</p>
                    <p>Với thiết kế tinh tế, sang trọng, bộ sản phẩm không chỉ phục vụ nhu cầu ăn uống hàng ngày mà còn là điểm nhấn trang trí cho không gian bếp của bạn.</p>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function increaseQty() {
        const input = document.getElementById("quantityInput");
        input.value = parseInt(input.value) + 1;
    }

    function decreaseQty() {
        const input = document.getElementById("quantityInput");
        const current = parseInt(input.value);
        if (current > 1) {
            input.value = current - 1;
        }
    }
</script>
<script>
    let selectedVariantId = null;

    function selectVariant(index) {
        document.querySelectorAll(".variant-info").forEach(el => el.classList.add("hidden"));
        document.querySelectorAll(".variant-button").forEach(btn => {
            btn.classList.remove("bg-blue-500", "text-white");
            btn.classList.add("bg-white", "text-gray-700");
        });

        const selectedBtn = document.getElementById(`variant-btn-${index}`);
        document.getElementById(`variant-info-${index}`).classList.remove("hidden");

        selectedBtn.classList.remove("bg-white", "text-gray-700");
        selectedBtn.classList.add("bg-blue-500", "text-white");

        const newPrice = selectedBtn.dataset.price;
        document.getElementById("mainPrice").innerText = newPrice + " ₫";

        selectedVariantId = selectedBtn.getAttribute("data-variant-id");
    }

    function handleAddToCart() {
        if (!selectedVariantId) {
            alert("Vui lòng chọn màu sắc trước khi thêm vào giỏ hàng.");
            return;
        }

        const quantity = parseInt(document.getElementById("quantityInput").value);
        if (isNaN(quantity) || quantity < 1) {
            alert("Số lượng không hợp lệ.");
            return;
        }

        const productId = @Model.Id;

        fetch('/Product/AddToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
            },
            body: JSON.stringify({
                productId: productId,
                variantId: selectedVariantId,
                quantity: quantity
            })
        })
        .then(response => {
            if (response.ok) {
                alert("Đã thêm vào giỏ hàng!");
            } else {
                alert("Lỗi khi thêm vào giỏ hàng.");
            }
        })
        .catch(error => {
            console.error("Lỗi fetch:", error);
            alert("Đã xảy ra lỗi khi thêm vào giỏ hàng.");
        });
    }
</script>


