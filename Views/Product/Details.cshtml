@using Prn222Project.Models;
@model Product;

@{
    var formattedPrice = (Model?.Price ?? 0).ToString("N0") + " ₫";
}

<form class="hidden">
    @Html.AntiForgeryToken()
</form>

<div class="container max-w-7xl mx-auto px-4 lg:px-8 py-10">
    <!-- Header -->
    <div class="mb-8">
        <br/>
        <h1 class="text-3xl lg:text-4xl font-extrabold tracking-tight text-slate-50 text-center">
            @Model.Name
        </h1>
        <div class="mt-3 flex items-center justify-center gap-4 text-sm">
            <span class="inline-flex items-center gap-1 text-amber-400">☆ ☆ ☆ ☆ ☆</span>
            <span class="text-slate-300">(0 đánh giá)</span>
            <span class="px-2.5 py-0.5 rounded-full text-emerald-300 bg-emerald-400/15 border border-emerald-300/30">
                Còn hàng
            </span>
        </div>
    </div>

    <!-- 2 cột từ md -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 lg:gap-12">
        <!-- Left: Image/Gallery -->
        <div class="space-y-5 md:pr-4">
            <div class="bg-slate-800/70 border border-slate-700 rounded-2xl p-3 shadow-xl">
                <img src="@(string.IsNullOrEmpty(@Model.ImageUrl) ? "./images/no-image.jpg" : @Model.ImageUrl)"
                     alt="@Model.Name"
                     class="w-full aspect-[4/3] object-cover rounded-xl">
            </div>
        </div>

        <!-- Right: Sticky buy panel (sticky từ md) -->
        <aside class="md:sticky md:top-24 md:pl-4">
            <div class="bg-slate-800/70 border border-slate-700 rounded-2xl p-6 shadow-xl backdrop-blur-lg text-slate-100 space-y-8">
                <!-- Price -->
                <div>
                    <div class="text-xs uppercase tracking-wider text-slate-300 mb-1">Giá</div>
                    <div id="mainPrice" class="text-4xl font-extrabold text-emerald-400">
                        @formattedPrice
                    </div>
                </div>

                <!-- Variants -->
                <div class="space-y-3">
                    <label class="block text-sm font-medium text-slate-200">Màu sắc</label>
                    <div class="grid grid-cols-2 sm:grid-cols-3 gap-3">
                        @for (int i = 0; i < Model.ProductVariants.Count; i++)
                        {
                            var variant = Model.ProductVariants.ElementAt(i);
                            <button type="button"
                                    onclick="selectVariant(@i)"
                                    id="variant-btn-@i"
                                    class="variant-button h-10 px-4 rounded-lg border border-slate-600 bg-slate-700 text-slate-100 hover:bg-slate-600 focus:outline-none focus:ring-2 focus:ring-indigo-400/40 transition cursor-pointer"
                                    data-price="@variant.Price.ToString("N0")"
                                    data-variant-id="@variant.Id">
                                @variant.Color
                            </button>
                        }
                    </div>

                    @for (int i = 0; i < Model.ProductVariants.Count; i++)
                    {
                        var v = Model.ProductVariants.ElementAt(i);
                        <div id="variant-info-@i"
                             class="variant-info hidden mt-2 p-3 bg-slate-900/70 text-slate-200 rounded-lg border border-slate-700">
                            <p><strong>Decoration:</strong> @v.Decoration</p>
                            <p><strong>Tồn kho:</strong> @v.NumberInStock</p>
                        </div>
                    }
                </div>

                <!-- Quantity -->
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-slate-200">Số lượng</label>
                    <div class="inline-flex items-center gap-3">
                        <button type="button" onclick="decreaseQty()"
                                class="w-10 h-10 border border-slate-600 rounded-md bg-slate-700 text-slate-100 hover:bg-slate-600 font-bold cursor-pointer">
                            -
                        </button>

                        <input id="quantityInput" type="number" value="1" min="1"
                               class="w-24 h-10 px-3 border border-slate-600 rounded-md text-center bg-slate-900 text-slate-100 focus:outline-none focus:ring-2 focus:ring-indigo-400/60">

                        <button type="button" onclick="increaseQty()"
                                class="w-10 h-10 border border-slate-600 rounded-md bg-slate-700 text-slate-100 hover:bg-slate-600 font-bold cursor-pointer">
                            +
                        </button>
                    </div>
                </div>

                <!-- Actions -->
                <div class="space-y-3">
                    <button onclick="handleAddToCart()"
                            class="w-full h-12 border border-slate-600 text-slate-100 bg-slate-800 rounded-lg hover:bg-slate-700 transition flex items-center justify-center gap-2 cursor-pointer">
                        Thêm vào giỏ hàng
                    </button>
                    <button class="w-full h-12 border border-slate-600 text-slate-100 bg-slate-800 rounded-lg hover:bg-slate-700 transition flex items-center justify-center gap-2 cursor-pointer">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                        </svg>
                        Yêu thích
                    </button>
                </div>
            </div>
        </aside>
    </div>
    <br/>

    <!-- Tabs -->
    <div class="mt-14">
        <div class="bg-slate-800/70 border border-slate-700 rounded-2xl overflow-hidden">
            <div class="flex border-b border-slate-700/70">
                <button class="px-6 py-4 text-slate-100 cursor-default bg-indigo-500/15 border-b-2 border-indigo-400 font-medium">
                    Mô tả sản phẩm
                </button>
                <button class="px-6 py-4 text-slate-300 cursor-not-allowed" disabled>Đánh giá (0)</button>
                <button class="px-6 py-4 text-slate-300 cursor-not-allowed" disabled>Chính sách đổi trả</button>
            </div>
            <div class="p-8">
                <div class="text-slate-200 leading-relaxed space-y-4">
                    <p>@Model.Description</p>
                    <p>Với thiết kế tinh tế, sang trọng, bộ sản phẩm không chỉ phục vụ nhu cầu ăn uống hàng ngày mà còn là điểm nhấn trang trí cho không gian bếp của bạn.</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- ===== GIỮ NGUYÊN LOGIC GỐC ===== -->
<script>
    function increaseQty() {
        const input = document.getElementById("quantityInput");
        input.value = parseInt(input.value) + 1;
    }
    function decreaseQty() {
        const input = document.getElementById("quantityInput");
        const current = parseInt(input.value);
        if (current > 1) { input.value = current - 1; }
    }
</script>
<script>
    let selectedVariantId = null;

    function selectVariant(index) {
        document.querySelectorAll(".variant-info").forEach(el => el.classList.add("hidden"));
        document.querySelectorAll(".variant-button").forEach(btn => {
            btn.classList.remove("bg-indigo-500","text-white","border-indigo-400","ring-2","ring-indigo-300/40");
            btn.classList.add("bg-slate-700","text-slate-100","border","border-slate-600");
        });

        const selectedBtn = document.getElementById(`variant-btn-${index}`);
        const info = document.getElementById(`variant-info-${index}`);
        if (info) info.classList.remove("hidden");

        selectedBtn.classList.remove("bg-slate-700","text-slate-100","border-slate-600");
        selectedBtn.classList.add("bg-indigo-500","text-white","border-indigo-400","ring-2","ring-indigo-300/40");

        const newPrice = selectedBtn.dataset.price;
        document.getElementById("mainPrice").innerText = newPrice + " ₫";

        selectedVariantId = selectedBtn.getAttribute("data-variant-id");
    }

    function handleAddToCart() {
        if (!selectedVariantId) {
            alert("Vui lòng chọn màu sắc trước khi thêm vào giỏ hàng.");
            return;
        }

        const quantity = parseInt(document.getElementById("quantityInput").value);
        if (isNaN(quantity) || quantity < 1) {
            alert("Số lượng không hợp lệ.");
            return;
        }

        const productId = @Model.Id;

        fetch('/Product/AddToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
            },
            body: JSON.stringify({ productId: productId, variantId: selectedVariantId, quantity: quantity })
        })
        .then(response => {
            if (response.ok) alert("Đã thêm vào giỏ hàng!");
            else alert("Lỗi khi thêm vào giỏ hàng.");
        })
        .catch(error => {
            console.error("Lỗi fetch:", error);
            alert("Đã xảy ra lỗi khi thêm vào giỏ hàng.");
        });
    }
</script>
